name: CD VideoService Demo

on:
  workflow_dispatch:
  push:
    branches: [main, develop, master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Cria a rede externa se não existir
      - name: Create external network
        run: docker network create video-net || true

      # Sobe serviços de infra (Postgres + RabbitMQ)
      - name: Start infra
        run: docker compose up -d db rabbitmq

      # Aguarda o Postgres responder
      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            if docker exec $(docker ps -qf "name=db") pg_isready -U soat; then
              echo "✅ Postgres pronto"; exit 0
            fi
            echo "⏳ Aguardando Postgres..."; sleep 2
          done
          exit 1

      # Build da imagem do projeto
      - name: Build application image
        run: docker build -t videoservice:${{ github.sha }} .

      # Roda migrations no container da app
      - name: Run migrations
        run: |
          docker run --rm \
            --network video-net \
            -v ${{ github.workspace }}:/app \
            -w /app \
            -e DATABASE_URL=postgresql+psycopg2://soat:soat@db:5432/videos \
            videoservice:${{ github.sha }} \
            alembic upgrade head

      # Sobe API + Worker + Flower
      - name: Launch services
        run: docker compose up -d api worker flower

      # Healthcheck da API
      - name: Health check (HTTP)
        run: |
          set -e
          for i in {1..30}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/docs || true)
            if [ "$code" = "200" ]; then
              echo "✅ API UP (/docs 200)"; exit 0
            fi
            echo "⏳ Aguardando API... código=$code"; sleep 2
          done
          docker logs api; exit 1

      # Exporta logs para debug
      - name: Export logs
        run: |
          docker compose logs api > api.log || true
          docker compose logs worker > worker.log || true
          docker compose logs db > postgres.log || true
          docker compose logs rabbitmq > rabbitmq.log || true

      - name: Upload run logs
        uses: actions/upload-artifact@v4
        with:
          name: cd-videoservice-logs
          path: |
            api.log
            worker.log
            postgres.log
            rabbitmq.log
