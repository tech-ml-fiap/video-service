version: "3.9"

services:
  dd-agent:
    image: gcr.io/datadoghq/agent:7
    container_name: dd-agent
    restart: unless-stopped
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=datadoghq.com
      - DD_ENV=dev
      - DD_APM_ENABLED=true
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
      - DD_TAGS=project:videos
    ports:
      - "8126:8126"
      - "8125:8125/udp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    networks: [video]

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: soat
      POSTGRES_PASSWORD: soat
      POSTGRES_DB: videos
    ports: ["5432:5432"]
    volumes: ["pgdata:/var/lib/postgresql/data"]
    networks: [video]

  rabbitmq:
    image: rabbitmq:3-management
    ports: ["5672:5672", "15672:15672"]
    networks: [video]

  api:
    build: .
    environment:
      DATABASE_URL: postgresql+psycopg2://soat:soat@db:5432/videos
      BROKER_URL: amqp://guest:guest@rabbitmq:5672//
      CUSTOMER_SERVICE_URL: http://clientservice-web:8000
      RESULT_BACKEND: rpc://
      STORAGE_DIR: /data
      JWT_PUBLIC_KEY: ""
      DD_SERVICE: api
      DD_ENV: dev
      DD_VERSION: "1.0.0"
      DD_AGENT_HOST: dd-agent
      DD_TRACE_AGENT_PORT: "8126"
      DD_TAGS: project:videos
    volumes: ["files:/data"]
    depends_on: ["db", "rabbitmq", "dd-agent"]
    ports: ["8000:8000"]
    command: >
      ddtrace-run uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks: [video]

  worker:
    build: .
    environment:
      DATABASE_URL: postgresql+psycopg2://soat:soat@db:5432/videos
      BROKER_URL: amqp://guest:guest@rabbitmq:5672//
      RESULT_BACKEND: rpc://
      STORAGE_DIR: /data
      JWT_PUBLIC_KEY: ""
      DD_SERVICE: worker
      DD_ENV: dev
      DD_VERSION: "1.0.0"
      DD_AGENT_HOST: dd-agent
      DD_TRACE_AGENT_PORT: "8126"
      DD_TAGS: project:videos
    volumes: ["files:/data"]
    depends_on: ["db", "rabbitmq", "dd-agent"]
    command: >
      ddtrace-run celery -A app.adapters.driver.worker.celery_app:celery_app
      worker -l info -Q celery -E
    networks: [video]

  flower:
    image: mher/flower:1.2
    environment:
      CELERY_BROKER_URL: amqp://guest:guest@rabbitmq:5672//
    ports: ["5555:5555"]
    depends_on: ["rabbitmq"]
    networks: [video]

volumes:
  pgdata:
  files:

networks:
  video:
    external: true
    name: video-net
